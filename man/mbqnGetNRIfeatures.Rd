% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mbqnGetNRIfeatures.R
\name{mbqnGetNRIfeatures}
\alias{mbqnGetNRIfeatures}
\title{A core function of MBQN. Identify and extract frequencies of rank invariant (RI) and nearly rank invariant (NRI) features}
\usage{
mbqnGetNRIfeatures(dat, FUN = NULL, low_thr = 0.5, method = NULL,
  verbose = TRUE)
}
\arguments{
\item{dat}{A data matrix. Rows - features, e.g. protein abundances; columns - samples
is applied without balancing the data}

\item{FUN}{A function like mean, median, a user defined function, or a numeric array
of weights with
\code{dim(user_array) = nrow(x)} to balance each intensity profile across samples.
Functions can be parsed also as characters. If FUN = NULL, features are not balanced,
i.e. normal QN is used.}

\item{low_thr}{Value between [0 1] as lower threshold that specifies the critical
rank invariance frequency, with default set to 0.5.}

\item{method}{Packagename providing the function used to compute the standard quantile normalization;
default NULL or "limma" - use \code{normalizeBetweenArrays()} from the limma package,
if "preprocessCore" - \code{normalize.quantiles()} from the preprocessCore package is used.}

\item{verbose}{Logical indicating to run function quietly.}
}
\value{
List of identified RI and NRI features, rank frequencies, and rank variation.
}
\description{
Apply quantile normalization to data matrix, sort ranks and count times features share
same ranks across samples/columns. A user-defined threhold is used to identify nearly rank invariant features.
}
\details{
Compute rank frequencies rank variation of each feature of a quantile normalized matrix.
}
\references{
Schad, A. and Kreuz, C., MBQN: R package for mean balanced quantile normalization. In prep. 2019
}
\seealso{
Other mbqn: \code{\link{get_kminmax}},
  \code{\link{mbqnCheckSaturation}}, \code{\link{mbqnNRI}},
  \code{\link{mbqn}}
}
\author{
A. Schad, \email{ariane.schad@zbsa.de}
}
\concept{mbqn}
\concept{quantile, quantile normalization, rank invariance}
